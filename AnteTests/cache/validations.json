{
  "version": "3.2",
  "log": [
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ante_alUSDSupplyTest": {
        "src": "contracts/Ante_alUSDSupplyTest.sol:9",
        "version": {
          "withMetadata": "3ee6b9c0c6a2610e98a6dfaa1246979f4b2c6804d47472569fbae03fb594dbf5",
          "withoutMetadata": "3ee6b9c0c6a2610e98a6dfaa1246979f4b2c6804d47472569fbae03fb594dbf5",
          "linkedWithoutMetadata": "3ee6b9c0c6a2610e98a6dfaa1246979f4b2c6804d47472569fbae03fb594dbf5"
        },
        "inherit": [
          "AnteTest",
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "()",
          "checkTestPasses()",
          "CheckTransmuterVL()",
          "CheckAlchemistVL()",
          "CheckTransmuterBVL()",
          "CheckAlchemistYVAVL()",
          "CheckTransmuterBYVAVL()",
          "checkBalance()",
          "checkCirculating()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ante_alUSDSupplyTest",
            "src": "contracts/Ante_alUSDSupplyTest.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "alUSDToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "yvDAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "DAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:23"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "alUSDToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:24"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "yvDAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:25"
            }
          ],
          "types": {
            "t_contract(IERC20)77": {
              "label": "contract IERC20"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AnteTest": {
        "src": "contracts/interfaces/AnteTest.sol:9",
        "inherit": [
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "getTestedContracts()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AnteTest",
            "src": "contracts/interfaces/AnteTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AnteTest",
              "label": "testAuthor",
              "type": "t_address",
              "src": "contracts/interfaces/AnteTest.sol:10"
            },
            {
              "contract": "AnteTest",
              "label": "testName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:11"
            },
            {
              "contract": "AnteTest",
              "label": "protocolName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:12"
            },
            {
              "contract": "AnteTest",
              "label": "testedContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/interfaces/AnteTest.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAnteTest": {
        "src": "contracts/interfaces/IAnteTest.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "testAuthor()",
          "protocolName()",
          "testedContracts(uint256)",
          "testName()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ante_alUSDSupplyTest": {
        "src": "contracts/Ante_alUSDSupplyTest.sol:9",
        "version": {
          "withMetadata": "9f95f7c203c72c920fe984774459d997d7d55f68c45e9f863030f2814f7ea578",
          "withoutMetadata": "9f95f7c203c72c920fe984774459d997d7d55f68c45e9f863030f2814f7ea578",
          "linkedWithoutMetadata": "9f95f7c203c72c920fe984774459d997d7d55f68c45e9f863030f2814f7ea578"
        },
        "inherit": [
          "AnteTest",
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "()",
          "checkTestPasses()",
          "checkBalance()",
          "checkCirculating()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ante_alUSDSupplyTest",
            "src": "contracts/Ante_alUSDSupplyTest.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "alUSDToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "yvDAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "DAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:23"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "alUSDToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:24"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "yvDAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:25"
            }
          ],
          "types": {
            "t_contract(IERC20)77": {
              "label": "contract IERC20"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AnteTest": {
        "src": "contracts/interfaces/AnteTest.sol:9",
        "inherit": [
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "getTestedContracts()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AnteTest",
            "src": "contracts/interfaces/AnteTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AnteTest",
              "label": "testAuthor",
              "type": "t_address",
              "src": "contracts/interfaces/AnteTest.sol:10"
            },
            {
              "contract": "AnteTest",
              "label": "testName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:11"
            },
            {
              "contract": "AnteTest",
              "label": "protocolName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:12"
            },
            {
              "contract": "AnteTest",
              "label": "testedContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/interfaces/AnteTest.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAnteTest": {
        "src": "contracts/interfaces/IAnteTest.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "testAuthor()",
          "protocolName()",
          "testedContracts(uint256)",
          "testName()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ante_alUSDSupplyTest": {
        "src": "contracts/Ante_alUSDSupplyTest.sol:9",
        "version": {
          "withMetadata": "bed2a6b36d2ec526cc7101fe3e43095238813ab1f837833a7d5caf5922f1eeaf",
          "withoutMetadata": "bed2a6b36d2ec526cc7101fe3e43095238813ab1f837833a7d5caf5922f1eeaf",
          "linkedWithoutMetadata": "bed2a6b36d2ec526cc7101fe3e43095238813ab1f837833a7d5caf5922f1eeaf"
        },
        "inherit": [
          "AnteTest",
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "()",
          "checkTestPasses()",
          "checkBalance()",
          "checkCirculating()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ante_alUSDSupplyTest",
            "src": "contracts/Ante_alUSDSupplyTest.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "alUSDToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "yvDAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "DAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:23"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "alUSDToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:24"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "yvDAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:25"
            }
          ],
          "types": {
            "t_contract(IERC20)77": {
              "label": "contract IERC20"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AnteTest": {
        "src": "contracts/interfaces/AnteTest.sol:9",
        "inherit": [
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "getTestedContracts()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AnteTest",
            "src": "contracts/interfaces/AnteTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AnteTest",
              "label": "testAuthor",
              "type": "t_address",
              "src": "contracts/interfaces/AnteTest.sol:10"
            },
            {
              "contract": "AnteTest",
              "label": "testName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:11"
            },
            {
              "contract": "AnteTest",
              "label": "protocolName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:12"
            },
            {
              "contract": "AnteTest",
              "label": "testedContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/interfaces/AnteTest.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAnteTest": {
        "src": "contracts/interfaces/IAnteTest.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "testAuthor()",
          "protocolName()",
          "testedContracts(uint256)",
          "testName()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ante_alUSDSupplyTest": {
        "src": "contracts/Ante_alUSDSupplyTest.sol:9",
        "version": {
          "withMetadata": "94e941c0fbcd286b0ddf04b9ff886e693fdb165ebd4d667f9bf5615a129678a2",
          "withoutMetadata": "94e941c0fbcd286b0ddf04b9ff886e693fdb165ebd4d667f9bf5615a129678a2",
          "linkedWithoutMetadata": "94e941c0fbcd286b0ddf04b9ff886e693fdb165ebd4d667f9bf5615a129678a2"
        },
        "inherit": [
          "AnteTest",
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "()",
          "checkTestPasses()",
          "checkBalance()",
          "checkCirculating()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ante_alUSDSupplyTest",
            "src": "contracts/Ante_alUSDSupplyTest.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "alUSDToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "yvDAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "DAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:23"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "alUSDToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:24"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "yvDAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:25"
            }
          ],
          "types": {
            "t_contract(IERC20)77": {
              "label": "contract IERC20"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AnteTest": {
        "src": "contracts/interfaces/AnteTest.sol:9",
        "inherit": [
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "getTestedContracts()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AnteTest",
            "src": "contracts/interfaces/AnteTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AnteTest",
              "label": "testAuthor",
              "type": "t_address",
              "src": "contracts/interfaces/AnteTest.sol:10"
            },
            {
              "contract": "AnteTest",
              "label": "testName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:11"
            },
            {
              "contract": "AnteTest",
              "label": "protocolName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:12"
            },
            {
              "contract": "AnteTest",
              "label": "testedContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/interfaces/AnteTest.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAnteTest": {
        "src": "contracts/interfaces/IAnteTest.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "testAuthor()",
          "protocolName()",
          "testedContracts(uint256)",
          "testName()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ante_alUSDSupplyTest": {
        "src": "contracts/Ante_alUSDSupplyTest.sol:9",
        "version": {
          "withMetadata": "4f03f2ee11b3e1587255f8394a9e4bfce6778ba1318a2e99318f47c840653874",
          "withoutMetadata": "4f03f2ee11b3e1587255f8394a9e4bfce6778ba1318a2e99318f47c840653874",
          "linkedWithoutMetadata": "4f03f2ee11b3e1587255f8394a9e4bfce6778ba1318a2e99318f47c840653874"
        },
        "inherit": [
          "AnteTest",
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "()",
          "checkTestPasses()",
          "checkBalance()",
          "checkCirculating()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ante_alUSDSupplyTest",
            "src": "contracts/Ante_alUSDSupplyTest.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "alUSDToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "yvDAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "DAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:23"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "alUSDToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:24"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "yvDAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:25"
            }
          ],
          "types": {
            "t_contract(IERC20)77": {
              "label": "contract IERC20"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AnteTest": {
        "src": "contracts/interfaces/AnteTest.sol:9",
        "inherit": [
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "getTestedContracts()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AnteTest",
            "src": "contracts/interfaces/AnteTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AnteTest",
              "label": "testAuthor",
              "type": "t_address",
              "src": "contracts/interfaces/AnteTest.sol:10"
            },
            {
              "contract": "AnteTest",
              "label": "testName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:11"
            },
            {
              "contract": "AnteTest",
              "label": "protocolName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:12"
            },
            {
              "contract": "AnteTest",
              "label": "testedContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/interfaces/AnteTest.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAnteTest": {
        "src": "contracts/interfaces/IAnteTest.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "testAuthor()",
          "protocolName()",
          "testedContracts(uint256)",
          "testName()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ante_alUSDSupplyTest": {
        "src": "contracts/Ante_alUSDSupplyTest.sol:9",
        "version": {
          "withMetadata": "3bdfb12358590f7f74afcafac5d30e04f9f1e3e41737056eb70c12d59d6010d8",
          "withoutMetadata": "3bdfb12358590f7f74afcafac5d30e04f9f1e3e41737056eb70c12d59d6010d8",
          "linkedWithoutMetadata": "3bdfb12358590f7f74afcafac5d30e04f9f1e3e41737056eb70c12d59d6010d8"
        },
        "inherit": [
          "AnteTest",
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "()",
          "checkTestPasses()",
          "checkBalance()",
          "checkCirculating()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ante_alUSDSupplyTest",
            "src": "contracts/Ante_alUSDSupplyTest.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "alUSDToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "yvDAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "DAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:23"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "alUSDToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:24"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "yvDAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:25"
            }
          ],
          "types": {
            "t_contract(IERC20)77": {
              "label": "contract IERC20"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AnteTest": {
        "src": "contracts/interfaces/AnteTest.sol:9",
        "inherit": [
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "getTestedContracts()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AnteTest",
            "src": "contracts/interfaces/AnteTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AnteTest",
              "label": "testAuthor",
              "type": "t_address",
              "src": "contracts/interfaces/AnteTest.sol:10"
            },
            {
              "contract": "AnteTest",
              "label": "testName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:11"
            },
            {
              "contract": "AnteTest",
              "label": "protocolName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:12"
            },
            {
              "contract": "AnteTest",
              "label": "testedContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/interfaces/AnteTest.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAnteTest": {
        "src": "contracts/interfaces/IAnteTest.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "testAuthor()",
          "protocolName()",
          "testedContracts(uint256)",
          "testName()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ante_alUSDSupplyTest": {
        "src": "contracts/Ante_alUSDSupplyTest.sol:9",
        "version": {
          "withMetadata": "b061680d7c92ccd3cd9de234972acf1f30f931289bc2a3c793fde2450bee844e",
          "withoutMetadata": "b061680d7c92ccd3cd9de234972acf1f30f931289bc2a3c793fde2450bee844e",
          "linkedWithoutMetadata": "b061680d7c92ccd3cd9de234972acf1f30f931289bc2a3c793fde2450bee844e"
        },
        "inherit": [
          "AnteTest",
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "()",
          "checkTestPasses()",
          "checkBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ante_alUSDSupplyTest",
            "src": "contracts/Ante_alUSDSupplyTest.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "alUSDToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "yvDAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "DAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:23"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "alUSDToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:24"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "yvDAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:25"
            }
          ],
          "types": {
            "t_contract(IERC20)77": {
              "label": "contract IERC20"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AnteTest": {
        "src": "contracts/interfaces/AnteTest.sol:9",
        "inherit": [
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "getTestedContracts()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AnteTest",
            "src": "contracts/interfaces/AnteTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AnteTest",
              "label": "testAuthor",
              "type": "t_address",
              "src": "contracts/interfaces/AnteTest.sol:10"
            },
            {
              "contract": "AnteTest",
              "label": "testName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:11"
            },
            {
              "contract": "AnteTest",
              "label": "protocolName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:12"
            },
            {
              "contract": "AnteTest",
              "label": "testedContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/interfaces/AnteTest.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAnteTest": {
        "src": "contracts/interfaces/IAnteTest.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "testAuthor()",
          "protocolName()",
          "testedContracts(uint256)",
          "testName()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ante_alUSDSupplyTest": {
        "src": "contracts/Ante_alUSDSupplyTest.sol:9",
        "version": {
          "withMetadata": "e017e94d141d02f4f00ed1475bcba2a686b0c13ac2056588396f3743149fcbcb",
          "withoutMetadata": "e017e94d141d02f4f00ed1475bcba2a686b0c13ac2056588396f3743149fcbcb",
          "linkedWithoutMetadata": "e017e94d141d02f4f00ed1475bcba2a686b0c13ac2056588396f3743149fcbcb"
        },
        "inherit": [
          "AnteTest",
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "()",
          "checkTestPasses()",
          "checkBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ante_alUSDSupplyTest",
            "src": "contracts/Ante_alUSDSupplyTest.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "alUSDToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "yvDAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "DAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:23"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "alUSDToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:24"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "yvDAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:25"
            }
          ],
          "types": {
            "t_contract(IERC20)77": {
              "label": "contract IERC20"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AnteTest": {
        "src": "contracts/interfaces/AnteTest.sol:9",
        "inherit": [
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "getTestedContracts()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AnteTest",
            "src": "contracts/interfaces/AnteTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AnteTest",
              "label": "testAuthor",
              "type": "t_address",
              "src": "contracts/interfaces/AnteTest.sol:10"
            },
            {
              "contract": "AnteTest",
              "label": "testName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:11"
            },
            {
              "contract": "AnteTest",
              "label": "protocolName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:12"
            },
            {
              "contract": "AnteTest",
              "label": "testedContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/interfaces/AnteTest.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAnteTest": {
        "src": "contracts/interfaces/IAnteTest.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "testAuthor()",
          "protocolName()",
          "testedContracts(uint256)",
          "testName()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ante_alUSDSupplyTest": {
        "src": "contracts/Ante_alUSDSupplyTest.sol:9",
        "version": {
          "withMetadata": "4e619e239bc8f7c94128bdbe8471d22c93a9d7d3f8797bbe7115ab40c6809c85",
          "withoutMetadata": "4e619e239bc8f7c94128bdbe8471d22c93a9d7d3f8797bbe7115ab40c6809c85",
          "linkedWithoutMetadata": "4e619e239bc8f7c94128bdbe8471d22c93a9d7d3f8797bbe7115ab40c6809c85"
        },
        "inherit": [
          "AnteTest",
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "()",
          "checkTestPasses()",
          "checkBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ante_alUSDSupplyTest",
            "src": "contracts/Ante_alUSDSupplyTest.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "alUSDToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "DAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:19"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "alUSDToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:20"
            }
          ],
          "types": {
            "t_contract(IERC20)77": {
              "label": "contract IERC20"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AnteTest": {
        "src": "contracts/interfaces/AnteTest.sol:9",
        "inherit": [
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "getTestedContracts()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AnteTest",
            "src": "contracts/interfaces/AnteTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AnteTest",
              "label": "testAuthor",
              "type": "t_address",
              "src": "contracts/interfaces/AnteTest.sol:10"
            },
            {
              "contract": "AnteTest",
              "label": "testName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:11"
            },
            {
              "contract": "AnteTest",
              "label": "protocolName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:12"
            },
            {
              "contract": "AnteTest",
              "label": "testedContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/interfaces/AnteTest.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAnteTest": {
        "src": "contracts/interfaces/IAnteTest.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "testAuthor()",
          "protocolName()",
          "testedContracts(uint256)",
          "testName()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ante_alUSDSupplyTest": {
        "src": "contracts/Ante_alUSDSupplyTest.sol:9",
        "version": {
          "withMetadata": "15a01896b0bdd343f0b3624222e8c918773d17d78496d371f71aef70a527d3b1",
          "withoutMetadata": "15a01896b0bdd343f0b3624222e8c918773d17d78496d371f71aef70a527d3b1",
          "linkedWithoutMetadata": "15a01896b0bdd343f0b3624222e8c918773d17d78496d371f71aef70a527d3b1"
        },
        "inherit": [
          "AnteTest",
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "()",
          "checkTestPasses()",
          "checkBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ante_alUSDSupplyTest",
            "src": "contracts/Ante_alUSDSupplyTest.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "alUSDToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "DAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:19"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "alUSDToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:20"
            }
          ],
          "types": {
            "t_contract(IERC20)77": {
              "label": "contract IERC20"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AnteTest": {
        "src": "contracts/interfaces/AnteTest.sol:9",
        "inherit": [
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "getTestedContracts()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AnteTest",
            "src": "contracts/interfaces/AnteTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AnteTest",
              "label": "testAuthor",
              "type": "t_address",
              "src": "contracts/interfaces/AnteTest.sol:10"
            },
            {
              "contract": "AnteTest",
              "label": "testName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:11"
            },
            {
              "contract": "AnteTest",
              "label": "protocolName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:12"
            },
            {
              "contract": "AnteTest",
              "label": "testedContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/interfaces/AnteTest.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAnteTest": {
        "src": "contracts/interfaces/IAnteTest.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "testAuthor()",
          "protocolName()",
          "testedContracts(uint256)",
          "testName()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ante_alUSDSupplyTest": {
        "src": "contracts/Ante_alUSDSupplyTest.sol:9",
        "version": {
          "withMetadata": "c8a6aeaf182e7b77d687876951c9efa85cbe8e2cf53a3c1227d731691bd53752",
          "withoutMetadata": "c8a6aeaf182e7b77d687876951c9efa85cbe8e2cf53a3c1227d731691bd53752",
          "linkedWithoutMetadata": "c8a6aeaf182e7b77d687876951c9efa85cbe8e2cf53a3c1227d731691bd53752"
        },
        "inherit": [
          "AnteTest",
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "()",
          "checkTestPasses()",
          "checkBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ante_alUSDSupplyTest",
            "src": "contracts/Ante_alUSDSupplyTest.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "alUSDToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "DAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:19"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "alUSDToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:20"
            }
          ],
          "types": {
            "t_contract(IERC20)77": {
              "label": "contract IERC20"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AnteTest": {
        "src": "contracts/interfaces/AnteTest.sol:9",
        "inherit": [
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "getTestedContracts()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AnteTest",
            "src": "contracts/interfaces/AnteTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AnteTest",
              "label": "testAuthor",
              "type": "t_address",
              "src": "contracts/interfaces/AnteTest.sol:10"
            },
            {
              "contract": "AnteTest",
              "label": "testName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:11"
            },
            {
              "contract": "AnteTest",
              "label": "protocolName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:12"
            },
            {
              "contract": "AnteTest",
              "label": "testedContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/interfaces/AnteTest.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAnteTest": {
        "src": "contracts/interfaces/IAnteTest.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "testAuthor()",
          "protocolName()",
          "testedContracts(uint256)",
          "testName()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ante_alUSDSupplyTest": {
        "src": "contracts/Ante_alUSDSupplyTest.sol:9",
        "version": {
          "withMetadata": "73442019bd0eadc29b8764eeddf1b6cf837d26a20ffde6c4d161a183e351326d",
          "withoutMetadata": "73442019bd0eadc29b8764eeddf1b6cf837d26a20ffde6c4d161a183e351326d",
          "linkedWithoutMetadata": "73442019bd0eadc29b8764eeddf1b6cf837d26a20ffde6c4d161a183e351326d"
        },
        "inherit": [
          "AnteTest",
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "()",
          "checkTestPasses()",
          "checkBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ante_alUSDSupplyTest",
            "src": "contracts/Ante_alUSDSupplyTest.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "alUSDToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "DAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:19"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "alUSDToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:20"
            }
          ],
          "types": {
            "t_contract(IERC20)77": {
              "label": "contract IERC20"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AnteTest": {
        "src": "contracts/interfaces/AnteTest.sol:9",
        "inherit": [
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "getTestedContracts()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AnteTest",
            "src": "contracts/interfaces/AnteTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AnteTest",
              "label": "testAuthor",
              "type": "t_address",
              "src": "contracts/interfaces/AnteTest.sol:10"
            },
            {
              "contract": "AnteTest",
              "label": "testName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:11"
            },
            {
              "contract": "AnteTest",
              "label": "protocolName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:12"
            },
            {
              "contract": "AnteTest",
              "label": "testedContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/interfaces/AnteTest.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAnteTest": {
        "src": "contracts/interfaces/IAnteTest.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "testAuthor()",
          "protocolName()",
          "testedContracts(uint256)",
          "testName()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ante_alUSDSupplyTest": {
        "src": "contracts/Ante_alUSDSupplyTest.sol:9",
        "version": {
          "withMetadata": "60fcc0fa11b3212f19fcb9687b49eb26d0081470461f2203cf487e543998b15c",
          "withoutMetadata": "60fcc0fa11b3212f19fcb9687b49eb26d0081470461f2203cf487e543998b15c",
          "linkedWithoutMetadata": "60fcc0fa11b3212f19fcb9687b49eb26d0081470461f2203cf487e543998b15c"
        },
        "inherit": [
          "AnteTest",
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "()",
          "checkTestPasses()",
          "checkBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ante_alUSDSupplyTest",
            "src": "contracts/Ante_alUSDSupplyTest.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "alUSDToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "DAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:19"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "alUSDToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:20"
            }
          ],
          "types": {
            "t_contract(IERC20)77": {
              "label": "contract IERC20"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AnteTest": {
        "src": "contracts/interfaces/AnteTest.sol:9",
        "inherit": [
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "getTestedContracts()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AnteTest",
            "src": "contracts/interfaces/AnteTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AnteTest",
              "label": "testAuthor",
              "type": "t_address",
              "src": "contracts/interfaces/AnteTest.sol:10"
            },
            {
              "contract": "AnteTest",
              "label": "testName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:11"
            },
            {
              "contract": "AnteTest",
              "label": "protocolName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:12"
            },
            {
              "contract": "AnteTest",
              "label": "testedContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/interfaces/AnteTest.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAnteTest": {
        "src": "contracts/interfaces/IAnteTest.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "testAuthor()",
          "protocolName()",
          "testedContracts(uint256)",
          "testName()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ante_alUSDSupplyTest": {
        "src": "contracts/Ante_alUSDSupplyTest.sol:9",
        "version": {
          "withMetadata": "89601e0bce580a72ed0c18bbf79d832f86bb4ae8cf9f824079c2cc9000b9b1d0",
          "withoutMetadata": "89601e0bce580a72ed0c18bbf79d832f86bb4ae8cf9f824079c2cc9000b9b1d0",
          "linkedWithoutMetadata": "89601e0bce580a72ed0c18bbf79d832f86bb4ae8cf9f824079c2cc9000b9b1d0"
        },
        "inherit": [
          "AnteTest",
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "()",
          "checkTestPasses()",
          "checkBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ante_alUSDSupplyTest",
            "src": "contracts/Ante_alUSDSupplyTest.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "alUSDToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "DAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:19"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "alUSDToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:20"
            }
          ],
          "types": {
            "t_contract(IERC20)77": {
              "label": "contract IERC20"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AnteTest": {
        "src": "contracts/interfaces/AnteTest.sol:9",
        "inherit": [
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "getTestedContracts()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AnteTest",
            "src": "contracts/interfaces/AnteTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AnteTest",
              "label": "testAuthor",
              "type": "t_address",
              "src": "contracts/interfaces/AnteTest.sol:10"
            },
            {
              "contract": "AnteTest",
              "label": "testName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:11"
            },
            {
              "contract": "AnteTest",
              "label": "protocolName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:12"
            },
            {
              "contract": "AnteTest",
              "label": "testedContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/interfaces/AnteTest.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAnteTest": {
        "src": "contracts/interfaces/IAnteTest.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "testAuthor()",
          "protocolName()",
          "testedContracts(uint256)",
          "testName()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ante_alUSDSupplyTest": {
        "src": "contracts/Ante_alUSDSupplyTest.sol:9",
        "version": {
          "withMetadata": "f2544af662e3a4a582a410e0bc9dfc55060c20d6d7c34a6dbe8a13c6cd405a87",
          "withoutMetadata": "f2544af662e3a4a582a410e0bc9dfc55060c20d6d7c34a6dbe8a13c6cd405a87",
          "linkedWithoutMetadata": "f2544af662e3a4a582a410e0bc9dfc55060c20d6d7c34a6dbe8a13c6cd405a87"
        },
        "inherit": [
          "AnteTest",
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "()",
          "checkTestPasses()",
          "checkBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ante_alUSDSupplyTest",
            "src": "contracts/Ante_alUSDSupplyTest.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "alUSDToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "DAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:19"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "alUSDToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:20"
            }
          ],
          "types": {
            "t_contract(IERC20)77": {
              "label": "contract IERC20"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AnteTest": {
        "src": "contracts/interfaces/AnteTest.sol:9",
        "inherit": [
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "getTestedContracts()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AnteTest",
            "src": "contracts/interfaces/AnteTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AnteTest",
              "label": "testAuthor",
              "type": "t_address",
              "src": "contracts/interfaces/AnteTest.sol:10"
            },
            {
              "contract": "AnteTest",
              "label": "testName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:11"
            },
            {
              "contract": "AnteTest",
              "label": "protocolName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:12"
            },
            {
              "contract": "AnteTest",
              "label": "testedContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/interfaces/AnteTest.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAnteTest": {
        "src": "contracts/interfaces/IAnteTest.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "testAuthor()",
          "protocolName()",
          "testedContracts(uint256)",
          "testName()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ante_alETHSupplyTest": {
        "src": "contracts/Ante_alETHSupplyTest.sol:9",
        "version": {
          "withMetadata": "cac189c08c284bd10f57ed8ff48ffa00cb83be71d375768001433e2bd981940d",
          "withoutMetadata": "cac189c08c284bd10f57ed8ff48ffa00cb83be71d375768001433e2bd981940d",
          "linkedWithoutMetadata": "cac189c08c284bd10f57ed8ff48ffa00cb83be71d375768001433e2bd981940d"
        },
        "inherit": [
          "AnteTest",
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ante_alETHSupplyTest",
            "src": "contracts/Ante_alETHSupplyTest.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wstETHToken",
            "src": "contracts/Ante_alETHSupplyTest.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "stETHToken",
            "src": "contracts/Ante_alETHSupplyTest.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ante_alETHSupplyTest",
              "label": "wstETHToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alETHSupplyTest.sol:17"
            },
            {
              "contract": "Ante_alETHSupplyTest",
              "label": "stETHToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alETHSupplyTest.sol:18"
            }
          ],
          "types": {
            "t_contract(IERC20)77": {
              "label": "contract IERC20"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Ante_alUSDSupplyTest": {
        "src": "contracts/Ante_alUSDSupplyTest.sol:9",
        "version": {
          "withMetadata": "72e3c3af96314a721281d7062283232a9f4b4b1c9202502c65c65623dd319f4b",
          "withoutMetadata": "72e3c3af96314a721281d7062283232a9f4b4b1c9202502c65c65623dd319f4b",
          "linkedWithoutMetadata": "72e3c3af96314a721281d7062283232a9f4b4b1c9202502c65c65623dd319f4b"
        },
        "inherit": [
          "AnteTest",
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "()",
          "checkTestPasses()",
          "checkBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ante_alUSDSupplyTest",
            "src": "contracts/Ante_alUSDSupplyTest.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "alUSDToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "DAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:15"
            },
            {
              "contract": "Ante_alUSDSupplyTest",
              "label": "alUSDToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:16"
            }
          ],
          "types": {
            "t_contract(IERC20)77": {
              "label": "contract IERC20"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AnteTest": {
        "src": "contracts/interfaces/AnteTest.sol:9",
        "inherit": [
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "getTestedContracts()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AnteTest",
            "src": "contracts/interfaces/AnteTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AnteTest",
              "label": "testAuthor",
              "type": "t_address",
              "src": "contracts/interfaces/AnteTest.sol:10"
            },
            {
              "contract": "AnteTest",
              "label": "testName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:11"
            },
            {
              "contract": "AnteTest",
              "label": "protocolName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:12"
            },
            {
              "contract": "AnteTest",
              "label": "testedContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/interfaces/AnteTest.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAnteTest": {
        "src": "contracts/interfaces/IAnteTest.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "testAuthor()",
          "protocolName()",
          "testedContracts(uint256)",
          "testName()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AnteLidoSupplyTest": {
        "src": "contracts/Ante_alUSDSupplyTest.sol:9",
        "version": {
          "withMetadata": "fd9265fb09e30f1f958899a4d036230bde077830b0357c8600350deb02980c63",
          "withoutMetadata": "fd9265fb09e30f1f958899a4d036230bde077830b0357c8600350deb02980c63",
          "linkedWithoutMetadata": "fd9265fb09e30f1f958899a4d036230bde077830b0357c8600350deb02980c63"
        },
        "inherit": [
          "AnteTest",
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "()",
          "checkTestPasses()",
          "checkBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AnteLidoSupplyTest",
            "src": "contracts/Ante_alUSDSupplyTest.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "alUSDToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AnteLidoSupplyTest",
              "label": "DAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:15"
            },
            {
              "contract": "AnteLidoSupplyTest",
              "label": "alUSDToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:16"
            }
          ],
          "types": {
            "t_contract(IERC20)77": {
              "label": "contract IERC20"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AnteTest": {
        "src": "contracts/interfaces/AnteTest.sol:9",
        "inherit": [
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "getTestedContracts()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AnteTest",
            "src": "contracts/interfaces/AnteTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AnteTest",
              "label": "testAuthor",
              "type": "t_address",
              "src": "contracts/interfaces/AnteTest.sol:10"
            },
            {
              "contract": "AnteTest",
              "label": "testName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:11"
            },
            {
              "contract": "AnteTest",
              "label": "protocolName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:12"
            },
            {
              "contract": "AnteTest",
              "label": "testedContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/interfaces/AnteTest.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAnteTest": {
        "src": "contracts/interfaces/IAnteTest.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "testAuthor()",
          "protocolName()",
          "testedContracts(uint256)",
          "testName()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AnteLidoSupplyTest": {
        "src": "contracts/Ante_alUSDSupplyTest.sol:9",
        "version": {
          "withMetadata": "fd9265fb09e30f1f958899a4d036230bde077830b0357c8600350deb02980c63",
          "withoutMetadata": "fd9265fb09e30f1f958899a4d036230bde077830b0357c8600350deb02980c63",
          "linkedWithoutMetadata": "fd9265fb09e30f1f958899a4d036230bde077830b0357c8600350deb02980c63"
        },
        "inherit": [
          "AnteTest",
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "()",
          "checkTestPasses()",
          "checkBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AnteLidoSupplyTest",
            "src": "contracts/Ante_alUSDSupplyTest.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DAIToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "alUSDToken",
            "src": "contracts/Ante_alUSDSupplyTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AnteLidoSupplyTest",
              "label": "DAIToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:15"
            },
            {
              "contract": "AnteLidoSupplyTest",
              "label": "alUSDToken",
              "type": "t_contract(IERC20)77",
              "src": "contracts/Ante_alUSDSupplyTest.sol:16"
            }
          ],
          "types": {
            "t_contract(IERC20)77": {
              "label": "contract IERC20"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AnteTest": {
        "src": "contracts/interfaces/AnteTest.sol:9",
        "inherit": [
          "IAnteTest"
        ],
        "libraries": [],
        "methods": [
          "getTestedContracts()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AnteTest",
            "src": "contracts/interfaces/AnteTest.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AnteTest",
              "label": "testAuthor",
              "type": "t_address",
              "src": "contracts/interfaces/AnteTest.sol:10"
            },
            {
              "contract": "AnteTest",
              "label": "testName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:11"
            },
            {
              "contract": "AnteTest",
              "label": "protocolName",
              "type": "t_string_storage",
              "src": "contracts/interfaces/AnteTest.sol:12"
            },
            {
              "contract": "AnteTest",
              "label": "testedContracts",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/interfaces/AnteTest.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAnteTest": {
        "src": "contracts/interfaces/IAnteTest.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "testAuthor()",
          "protocolName()",
          "testedContracts(uint256)",
          "testName()",
          "checkTestPasses()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}